# 1) Make sure working tree is clean
git status
# if there are changes you want to keep, commit or stash them:
# git add . && git commit -m "WIP"   OR   git stash

# 2) Switch to deploy branch and update remote refs
git checkout deploy-anywhere
git fetch origin

# 3) Back up the file you want to preserve (outside the repo)
mkdir -p /tmp/repo-backup
cp clip/settings.py /tmp/repo-backup/clip_settings.py

# 4) Overwrite working tree with files from main (remote main recommended)
git checkout origin/main -- .

# 5) Restore the preserved file
mv /tmp/repo-backup/clip_settings.py clip/settings.py

# 6) Stage & commit the update
git add .
git commit -m "Sync deploy-anywhere with main (preserve clip/settings.py)"

# 7) Push to origin
git push origin deploy-anywhere















B1 — Quick merge + restore preserved file
git fetch origin
git checkout deploy-anywhere

# backup file
cp clip/settings.py /tmp/repo-backup/clip_settings.py

# merge allowing unrelated histories
git merge origin/main --allow-unrelated-histories

# if conflicts occur, resolve them (or skip by restoring file)
# restore deploy version of the file
cp /tmp/repo-backup/clip_settings.py clip/settings.py
git add clip/settings.py

# finish merge (if conflicts were present you may need to git add other files then:)
git commit --no-edit   # or provide commit message if prompted

# push
git push origin deploy-anywhere

B2 — Make merges automatically keep deploy-anywhere's clip/settings.py

This sets up a merge driver so that when you merge, clip/settings.py from the branch being merged into (i.e., deploy-anywhere) is kept automatically.

git fetch origin
git checkout deploy-anywhere

# register a trivial "ours" merge driver
git config merge.ours.driver true

# add gitattributes so Git uses "ours" for that file
echo "clip/settings.py merge=ours" >> .gitattributes
git add .gitattributes
git commit -m "Ensure clip/settings.py keeps deploy branch version on merge"

# now merge unrelated histories
git merge origin/main --allow-unrelated-histories

# push
git push origin deploy-anywhere